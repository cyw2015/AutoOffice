<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
              http://www.springframework.org/schema/security 
              http://www.springframework.org/schema/security/spring-security-4.0.xsd">
	<!-- 不过滤静态资源 -->
	<http security="none" pattern="/login.jsp" />
	<http security="none" pattern="/commons/**" />
	<http security="none" pattern="/static/**" />
	<http security="none" pattern="/403.jsp" />
	<http security="none" pattern="/404.jsp" />
	<http security="none" pattern="/500.jsp" />
	<http security="none" pattern="/imageEmp/**" />
	<http security="none" pattern="/sessionTimeout.jsp*" />
	<http auto-config='true' use-expressions="true">
		<!-- 登录页面 -->
		<!-- default-target-url="/index.jsp" authentication-failure-url="/login.jsp?error=true" -->
		<form-login login-page="/login.jsp"
			login-processing-url="/login" username-parameter="username"
			password-parameter="password" 
			always-use-default-target="true"
			authentication-success-handler-ref="expaiSuccessHandler"
			authentication-failure-handler-ref="myFailureHandler" 
			/>
		<!-- 尝试访问没有权限的页面时跳转的页面 -->
		<access-denied-handler error-page="/WEB-INF/error/403.jsp" />

		<!-- 退出配置 logout-success-url:退出成功后跳转的页面 , 如果session配置了invalid-session-url默认跳转到指定的页面， 
			logout-success-url不起作用 -->
		<logout logout-url="/logout" logout-success-url="/login"
			invalidate-session="true" />

		<!-- 设置会话数 -->
		<session-management invalid-session-url="/sessionTimeout.jsp">
			<!-- <concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" /> -->
		</session-management>

		<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />

		<csrf disabled="true" />
	</http>
    <!-- 登录成功处理器 -->  
	<beans:bean id="expaiSuccessHandler" class="com.cyw.office.security.MyAuthenticationSuccessHandler">  
        </beans:bean>  
	<!-- 登录失败处理器 -->  
	<beans:bean id="myFailureHandler" class="com.cyw.office.security.MyAuthenticationFailureHandler">  
        </beans:bean>  
	<!-- 一个自定义的filter，必须包含authenticationManager, accessDecisionManager,securityMetadataSource三个属性， 
		所有控制将在这三个类中实现 -->
	<beans:bean id="myFilter"
		class="com.cyw.office.security.MyFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />
		<beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" />
	</beans:bean>

	<!-- 验证配置 ， 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder hash="md5" />
		</authentication-provider>
	</authentication-manager>

	<!-- 项目实现的用户查询服务,将用户信息查询出来 -->
	<beans:bean id="userDetailsService" class="com.cyw.office.security.MyUserDetailService"></beans:bean>

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="myAccessDecisionManagerBean"
		class="com.cyw.office.security.MyAccessDecisionManager">
	</beans:bean>

	<!-- 资源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="mySecurityMetadataSource"
		class="com.cyw.office.security.MyInvocationSecurityMetadataSourceService">
		<beans:constructor-arg>
			<beans:ref bean="resService" />
		</beans:constructor-arg>
	</beans:bean>

	<beans:bean id="resService" class="com.cyw.office.service.sys.impl.ResServiceImpl"></beans:bean>

	<!-- 提示语 -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:message_zh_CN"></beans:property>
	</beans:bean>

	<!-- 启用表达式 为了后面的投票器做准备 -->
	<beans:bean
		class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"
		id="expressionHandler" />
	<beans:bean
		class="org.springframework.security.web.access.expression.WebExpressionVoter"
		id="expressionVoter">
		<beans:property name="expressionHandler" ref="expressionHandler" />
	</beans:bean>

</beans:beans>
