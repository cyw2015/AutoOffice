<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                            http://www.springframework.org/schema/context    
                            http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                            http://www.springframework.org/schema/mvc    
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                            http://www.springframework.org/schema/security
                            http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<context:annotation-config />
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.cyw.office" />
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	<!-- 数据库 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"></property>
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/cyw/office/mapping/**/*.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cyw.office.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 不过滤静态资源  -->
	<security:http security="none" pattern="/login.jsp" />
	<security:http security="none" pattern="/commons/**" />
	<security:http security="none" pattern="/static/**" />
	
	<security:http auto-config='true' use-expressions="false">
		<!-- <security:intercept-url pattern="/**" access="RES_SYS_MAIN"/> -->
		<security:form-login login-page="/login.jsp"
			authentication-failure-url="/login.jsp?error=true"
			default-target-url="/index.jsp" always-use-default-target="true"
			login-processing-url="/login" username-parameter="username"
			password-parameter="password" />

		<!-- 尝试访问没有权限的页面时跳转的页面  -->
		<security:access-denied-handler
			error-page="/WEB-INF/error/403.jsp" />
		
		<!-- 退出配置 logout-success-url:退出成功后跳转的页面 , 
		如果session配置了invalid-session-url默认跳转到指定的页面，
		logout-success-url不起作用 -->
		<security:logout logout-url="/logout"
			logout-success-url="/login"  
			invalidate-session="true" />
	
		<security:session-management>
			<security:concurrency-control
				max-sessions="1" error-if-maximum-exceeded="true" />
		</security:session-management>

		<security:custom-filter ref="myFilter"
			before="FILTER_SECURITY_INTERCEPTOR" />

		<security:csrf disabled="true" />
	</security:http>

	<!-- 一个自定义的filter，必须包含authenticationManager,
	accessDecisionManager,securityMetadataSource三个属性， 
		所有控制将在这三个类中实现 -->
	<bean id="myFilter" class="com.cyw.office.security.MyFilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />
		<property name="securityMetadataSource" ref="mySecurityMetadataSource" />
	</bean>

	<!-- 验证配置 ， 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			user-service-ref="userDetailsService">
			 <security:password-encoder hash="md5"/>
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- 项目实现的用户查询服务,将用户信息查询出来 -->
	<bean id="userDetailsService" class="com.cyw.office.security.MyUserDetailService"></bean>

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<bean id="myAccessDecisionManagerBean" class="com.cyw.office.security.MyAccessDecisionManager">
	</bean>

	<!-- 资源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问 -->
	<bean id="mySecurityMetadataSource"
		class="com.cyw.office.security.MyInvocationSecurityMetadataSourceService">
		<constructor-arg >
			<ref bean="resService"/>
		</constructor-arg>
		</bean>
	<bean id="resService" class="com.cyw.office.service.impl.ResServiceImpl"></bean>
	<!-- 提示语 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:message_zh_CN"></property>
	</bean>
	
</beans>  