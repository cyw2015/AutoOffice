<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cyw.office.dao.document.DocumentMapper" >
  <resultMap id="BaseResultMap" type="com.cyw.office.entity.document.Document" >
    <id column="DOC_CODE" property="docCode" jdbcType="VARCHAR" />
    <result column="ID" property="id" jdbcType="DECIMAL" />
    <result column="DOC_TITLE" property="docTitle" jdbcType="OTHER" />
    <result column="DOC_CONTENT" property="docContent" jdbcType="OTHER" />
    <result column="EDITTIME" property="edittime" jdbcType="TIMESTAMP" />
    <result column="PUBTIME" property="pubtime" jdbcType="TIMESTAMP" />
    <result column="RECIPIENTS" property="recipients" jdbcType="OTHER" />
     <result column="RECIPIENTSCODE" property="recipientsCode" jdbcType="OTHER" />
    <result column="ATTACHMENT" property="attachment" jdbcType="OTHER" />
    <result column="ATTACHMENT_PATH" property="attachmentPath" jdbcType="OTHER" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="CREATER" property="creater" jdbcType="VARCHAR" />
     <result column="CREATER_NAME" property="createrName" jdbcType="VARCHAR" />
     <result column="totalCount" property="totalCount" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    DOC_CODE, ID, DOC_TITLE, DOC_CONTENT, EDITTIME, PUBTIME, ATTACHMENT, 
    STATE, CREATER,ATTACHMENT_PATH
  </sql>
  <select id="getDocPubPage" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
 with s as ( select tmp.doc_code ,wm_concat(tmp.emp_code) as recipientsCode,wm_concat(tmp.emp_name) as recipients from (
   select t.doc_code,e.emp_code ,e.emp_name from  t_document t
   left join t_recipients r on t.doc_code=r.doc_code 
   left join t_employee e on  r.emp_code=e.emp_code
   union all 
    select t.doc_code,d.dept_code,d.dept_name from  t_document t
    join t_recipients r on t.doc_code=r.doc_code 
    join t_department d on  r.emp_code=d.dept_code
  )tmp group by tmp.doc_code)
  
   	select t.* from (
			select a.*, rownum as rowIndex
			from (
			 select t.*,s.recipientsCode,s.recipients,
     	 	count(1) over() totalCount
			from t_document t
			left join s on t.doc_code=s.doc_code
			<if test="creater!=null">
				where t.creater=#{creater }
			</if>
			<if test="order!=null and sort!=null">
				order by t.${sort} ${order}
			</if>
			) a
		) t
		where t.rowIndex > #{start }
			  and t.rowIndex <![CDATA[ <=  ]]> #{end }
  </select>
  
  <select id="findDocByCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_document
    where DOC_CODE = #{docCode,jdbcType=VARCHAR}
  </select>
  
  <insert id="insert" parameterType="java.util.HashMap" >
    insert into T_DOCUMENT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      <if test="docCode != null" >
        DOC_CODE,
      </if>
      <if test="docTitle != null" >
        DOC_TITLE,
      </if>
      <if test="docContent != null" >
        DOC_CONTENT,
      </if>
        EDITTIME,
      <if test="attachment != null" >
        ATTACHMENT,
      </if>
        STATE,
      <if test="creater != null" >
        CREATER,
      </if>
      <if test="attachmentPath != null" >
        ATTACHMENT_PATH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      SEQ_T_DOCUMENT_ID.nextval,
      <if test="docCode != null" >
        #{docCode,jdbcType=VARCHAR},
      </if>
      <if test="docTitle != null" >
        #{docTitle,jdbcType=OTHER},
      </if>
      <if test="docContent != null" >
        #{docContent,jdbcType=OTHER},
      </if>
		sysdate,
      <if test="attachment != null" >
        #{attachment,jdbcType=OTHER},
      </if>
		'0',
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
        <if test="attachmentPath != null" >
        #{attachmentPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertRecipients"  parameterType="java.util.HashMap"> 
  		insert into t_recipients (doc_code, emp_code) 
		select #{docCode} ,A.* from(
	    <foreach collection="recipients" item="item" index="index" separator="union all " >
	       (select #{item } from dual)
	    </foreach>
	    )A
  </insert>
  <delete id="deleteDocByCode" parameterType="java.util.HashMap" >
    delete from T_DOCUMENT
    where DOC_CODE in 
	 <foreach collection="docCode" item="doc_code" index="index" open="(" separator="," close=")">
    #{doc_code }
    </foreach>
	and creater=#{creater,jdbcType=VARCHAR}
   </delete>
   
   <update id="updateDocPub" parameterType="java.util.HashMap" >
    update T_DOCUMENT
    <set >
      <if test="docTitle != null" >
        DOC_TITLE = #{docTitle,jdbcType=OTHER},
      </if>
      <if test="docContent != null" >
        DOC_CONTENT = #{docContent,jdbcType=OTHER},
      </if>
      <if test="pubTime != null" >
        PUBTIME = #{pubtime,jdbcType=TIMESTAMP},
      </if>
      <if test="attachment != null" >
        ATTACHMENT = #{attachment,jdbcType=OTHER},
      </if>
        <if test="attachmentPath != null" >
        ATTACHMENT_PATH = #{attachmentPath,jdbcType=OTHER},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where DOC_CODE = #{docCode,jdbcType=VARCHAR} 
    <if test="creater != null" >
   	 and creater=#{creater,jdbcType=VARCHAR}
    </if>
  </update>
  
  <delete id="deleteRecipientsByCode" parameterType="java.util.HashMap" >
    delete from t_recipients
    where doc_code=#{docCode,jdbcType=VARCHAR}
   </delete>
   
   <insert id="addAppr"  parameterType="java.util.HashMap"> 
   		insert into t_approval (id, doc_code,  state)
		values(SEQ_T_APPROVAL_ID.Nextval,#{docCode},'0')
   </insert>
   
   <resultMap type="java.util.HashMap" id="docDetail">
   		<id column="docCode" property="docCode"/>
   		<result column="docTitle" property="docTitle"/>
   		<result column="creater" property="creater"/>
   		<result column="createrName" property="createrName"/>
   		<result column="createrDeptCode" property="createrDeptCode"/>
   		<result column="createrDeptName" property="createrDeptName"/>
   		<result column="docContent" property="docContent"/>
   		<result column="pubtime" property="pubtime"/>
   		<result column="attachment" property="attachment"/>
   		<result column="attachmentPath" property="attachmentPath"/>
   		<collection property="rec" javaType="java.util.List" resultMap="recDetail"></collection>
   		<collection property="appr" javaType="java.util.HashMap" resultMap="apprDetail"></collection>
   </resultMap>
   <resultMap type="java.util.HashMap" id="recDetail">
   		<result column="recCode" property="recCode"/>
   		<result column="recName" property="recName"/>
   		<result column="recDeptCode" property="recDeptCode"/>
   		<result column="recDeptName" property="recDeptName"/>
   </resultMap>
   
   <resultMap type="java.util.HashMap" id="apprDetail">
   		<result column="state" property="state"/>
   		<result column="apprDate" property="apprDate"/>
   		<result column="apprAdvice" property="apprAdvice"/>
		<result column="approver" property="approver"/>
		<result column="apprName" property="apprName"/>
		<result column="apprDeptCode" property="apprDeptCode"/>
		<result column="apprDeptName" property="apprDeptName"/>
   </resultMap>
   
   <select id="getDocDetail" resultMap="docDetail"  parameterType="java.lang.String"> 
   		with rec as 
		(select t.doc_code,e.emp_code,e.emp_name,d.dept_code,d.dept_name from t_recipients  t  
		join t_employee e on  t.emp_code = e.emp_code 
		join t_department d on  e.dept_code =  d.dept_code)
		,
		appr as (select t.doc_code,t.state,t.appr_date,t.appr_advice,t.approver,e.emp_name,e.dept_code,d.dept_name from t_approval t
		left join t_employee e on t.approver = e.emp_code
		left join t_department d on e.dept_code = d.dept_code)
		
		select t.doc_code as docCode,t.doc_title as docTitle,
		t.creater,e.emp_name as createrName,e.dept_code as createrDeptCode,d.dept_name as createrDeptName,
		t.doc_content as docContent ,t.pubtime,
		r.emp_code as recCode ,r.emp_name as recName ,r.dept_code as recDeptCode ,r.dept_name as recDeptName ,
		t.attachment,t.attachment_path as attachmentPath ,
		a.state ,a.appr_date as apprDate ,a.appr_advice as apprAdvice,a.approver,a.emp_name as apprName, a.dept_code as apprDeptCode,a.dept_name as apprDeptName
		from t_document t
		left join t_employee e on t.creater = e.emp_code
		left join t_department d on e.dept_code = d.dept_code
		left join rec r on t.doc_code = r.doc_code
		left join appr a on t.doc_code = a.doc_code
		where t.doc_code = #{docCode}
   </select>
   
   <!-- getViewDocPage -->
 <select id="getViewDocPage" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    	select t.* from (
			select a.*, rownum as rowIndex
			from (
		   		select  t.id,t.doc_code,t.doc_title,t.creater,emp.emp_name as creater_name,t.pubtime ,
		   		count(1) over() totalCount
		   		from t_document t
		   		left join t_employee emp on t.creater = emp.emp_code
				left join t_recipients r on t.doc_code = r.doc_code 
				left join t_employee e on r.emp_code = e.emp_code
				where  t.state ='2' and e.emp_code =#{custom}
				<if test="order!=null and sort!=null">
				order by ${sort} ${order}
			</if>
			) a
		) t
		where t.rowIndex > #{start }
			  and t.rowIndex <![CDATA[ <=  ]]> #{end }
   </select>
</mapper>